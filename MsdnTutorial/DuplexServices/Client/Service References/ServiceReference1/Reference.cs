//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Diagnostics;
using System.ServiceModel;
using System.ServiceModel.Channels;

namespace Client.ServiceReference1 {
    
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="ServiceReference1.ICalculatorDuplex", CallbackContract=typeof(ICalculatorDuplexCallback), SessionMode=SessionMode.Required)]
    public interface ICalculatorDuplex {
        
        [OperationContract(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICalculatorDuplex/Clear")]
        void Clear();
        
        [OperationContract(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICalculatorDuplex/AddTo")]
        void AddTo(double n);
        
        [OperationContract(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICalculatorDuplex/SubtractFrom")]
        void SubtractFrom(double n);
        
        [OperationContract(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICalculatorDuplex/MultiplyBy")]
        void MultiplyBy(double n);
        
        [OperationContract(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICalculatorDuplex/DivideBy")]
        void DivideBy(double n);
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorDuplexCallback {
        
        [OperationContract(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICalculatorDuplex/Equals")]
        void Equals(double result);
        
        [OperationContract(IsOneWay=true, Action="http://Microsoft.ServiceModel.Samples/ICalculatorDuplex/Equation")]
        void Equation(string eqn);
    }
    
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorDuplexChannel : ICalculatorDuplex, IClientChannel {
    }
    
    [DebuggerStepThrough()]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorDuplexClient : DuplexClientBase<ICalculatorDuplex>, ICalculatorDuplex {
        
        public CalculatorDuplexClient(InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CalculatorDuplexClient(InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CalculatorDuplexClient(InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorDuplexClient(InstanceContext callbackInstance, string endpointConfigurationName, EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorDuplexClient(InstanceContext callbackInstance, Binding binding, EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Clear() {
            base.Channel.Clear();
        }
        
        public void AddTo(double n) {
            base.Channel.AddTo(n);
        }
        
        public void SubtractFrom(double n) {
            base.Channel.SubtractFrom(n);
        }
        
        public void MultiplyBy(double n) {
            base.Channel.MultiplyBy(n);
        }
        
        public void DivideBy(double n) {
            base.Channel.DivideBy(n);
        }
    }
}
